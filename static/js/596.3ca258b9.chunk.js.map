{"version":3,"file":"static/js/596.3ca258b9.chunk.js","mappings":"kOA0EA,UAjEqB,WACnB,OAMIA,EAAAA,EAAAA,MALFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,MACaC,EALf,EAKEC,UAAaD,OAGTE,GAAWC,EAAAA,EAAAA,MAUjB,OAFAC,QAAQC,IAAIN,EAAM,aAGhB,kBAAMO,SAAUT,GATD,SAAAU,GACfH,QAAQC,IAAIE,GACZL,GAASM,EAAAA,EAAAA,IAAcD,IACvBT,GACD,IAKC,WACE,SAAC,KAAD,QACEW,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,KAAK,QACLC,MAAM,QACNC,KAAK,QACLC,GAAG,QACHC,aAAa,iBACTpB,EAAS,QAAS,CAAEc,UAAU,MAEnCV,EAAOiB,QAAS,0BAAM,4BACvB,SAAC,KAAD,QACER,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,KAAK,OACLC,MAAM,OACNC,KAAK,OACLC,GAAG,OACHC,aAAa,gBACTpB,EAAS,OAAQ,CAAEc,UAAU,MAElCV,EAAOY,OAAQ,0BAAM,4BACtB,SAAC,KAAD,QACEH,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,KAAK,WACLC,MAAM,WACNC,KAAK,WACLC,GAAG,WACHC,aAAa,oBACTpB,EAAS,WAAY,CAAEc,UAAU,EAAMQ,UAAW,MAEvDlB,EAAOmB,WAAY,0BAAM,4BAE1B,SAAC,IAAD,CAAQL,KAAK,SAASH,WAAS,EAACS,QAAQ,YAAYC,GAAI,CAAEC,GAAI,EAAGC,GAAI,GAArE,SAA0E,cAK/E,C","sources":["page/RegisterPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { registerThunk } from 'redax/authReducerThunk';\n\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\n//використовую бібліотеку react hook form\nconst RegisterPage = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    watch,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    console.log(data);\n    dispatch(registerThunk(data));\n    reset();\n  };\n\n  console.log(watch('example')); // watch input value by passing the name of it\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"email\"\n        label=\"Email\"\n        type=\"email\"\n        id=\"email\"\n        autoComplete=\"current-email\"\n        {...register('email', { required: true })}\n      />\n      {errors.email && <span>This field is required</span>}\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"name\"\n        label=\"Name\"\n        type=\"name\"\n        id=\"name\"\n        autoComplete=\"current-name\"\n        {...register('name', { required: true })}\n      />\n      {errors.name && <span>This field is required</span>}\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        id=\"password\"\n        autoComplete=\"current-password\"\n        {...register('password', { required: true, minLength: 7 })}\n      />\n      {errors.password && <span>This field is required</span>}\n\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n        Sign Up\n      </Button>\n    </form>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["useForm","register","handleSubmit","reset","watch","errors","formState","dispatch","useDispatch","console","log","onSubmit","data","registerThunk","margin","required","fullWidth","name","label","type","id","autoComplete","email","minLength","password","variant","sx","mt","mb"],"sourceRoot":""}